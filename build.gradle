plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'spring.core'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Java에서 의존성 주입(Dependency Injection)을 지원하기 위한 JSR 330 인터페이스를 제공하는 라이브러리
    implementation 'javax.inject:javax.inject:1'

    // 기본적으로 모든 하위 의존성을 가져옴
    // testImplementation 'org.springframework.boot:spring-boot-starter-test

    // 의존성 블록을 사용하여 추가 구성 옵션을 지정
    // exclude 구문을 사용하여 org.junit.vintage:junit-vintage-engine 의존성을 제외합니다. 이는 해당 의존성을 가져오지 않도록 설정
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // lombok 라이브러리 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}
